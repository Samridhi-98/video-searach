{"version":3,"sources":["components/SearchBar.js","api/YouTube.js","components/VideoItem.js","components/VideoList.js","components/VideoDetail.js","components/App.js","index.js"],"names":["SearchBar","state","content","onFormSubmit","event","preventDefault","props","onSearch","className","onSubmit","this","type","value","onChange","setState","target","React","Component","axios","create","baseURL","params","part","maxResults","key","VideoItem","videoprops","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","alt","title","VideoList","videos","renderedList","map","video","id","videoId","VideoDetail","videoSrc","description","App","SelectedVideo","onSearchSubmit","a","YouTube","get","q","response","data","items","style","marginTop","Index","ReactDOM","render","document","querySelector"],"mappings":"4QA4BeA,E,4MAvBXC,MAAQ,CAAEC,QAAS,I,EAEnBC,aAAe,SAACC,GACZA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,U,uDAGzB,IAAD,OACL,OACI,yBAAKM,UAAU,cACX,0BAAMA,UAAU,UAAUC,SAAUC,KAAKP,cACrC,yBAAKK,UAAU,SACX,+CACA,2BAAOG,KAAK,OAAOC,MAAOF,KAAKT,MAAMC,QAASW,SAAU,SAAAT,GAAK,OAAI,EAAKU,SAAS,CAAEZ,QAASE,EAAMW,OAAOH,kB,GAhBvGI,IAAMC,W,QCCfC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAS,wCACTC,OAAQ,CACJC,KAAM,UACNX,KAAM,QACNY,WAAY,EACZC,IARI,6CCcGC,G,MAZG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAC7B,OACI,yBAAKC,QAAS,kBAAMD,EAAcD,IAAalB,UAAU,oBACrD,yBAAKA,UAAU,WAAWqB,IAAKH,EAAWI,QAAQC,WAAWC,OAAOC,IAAKC,IAAKR,EAAWI,QAAQK,QACjG,yBAAK3B,UAAU,WAEX,yBAAKA,UAAU,UAAUkB,EAAWI,QAAQK,WCY7CC,EAlBG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cAEnBW,EAAeD,EAAOE,KAAI,SAAAC,GAC5B,OAAO,kBAAC,EAAD,CACHd,WAAYc,EACZb,cAAeA,EACfH,IAAKgB,EAAMC,GAAGC,aAItB,OACI,yBAAKlC,UAAU,4BAET8B,ICMCK,EArBK,SAAC,GAAe,IAAbH,EAAY,EAAZA,MAEnB,IAAKA,EACD,OAAO,2CAGX,IAAMI,EAAQ,wCAAoCJ,EAAMC,GAAGC,SAE3D,OACI,6BACI,yBAAKlC,UAAU,YACX,4BAAQqB,IAAKe,KAEjB,yBAAKpC,UAAU,cACX,wBAAIA,UAAU,aAAd,IAA4BgC,EAAMV,QAAQK,MAA1C,KACA,+BAAMK,EAAMV,QAAQe,YAApB,QC+CDC,E,4MApDX7C,MAAQ,CAAEoC,OAAQ,GAAIU,cAAe,M,EAUrCC,e,uCAAiB,WAAM9C,GAAN,eAAA+C,EAAA,sEAEUC,EAAQC,IAAI,UAAW,CAC1C9B,OAAQ,CACJ+B,EAAGlD,KAJE,OAEPmD,EAFO,OAOb,EAAKvC,SAAS,CACVuB,OAAQgB,EAASC,KAAKC,MACtBR,cAAeM,EAASC,KAAKC,MAAM,KAT1B,2C,wDAcjB5B,cAAgB,SAACa,GAEb,EAAK1B,SAAS,CAAEiC,cAAeP,K,kEApB/B9B,KAAKsC,eAAe,U,+BAwBpB,OACI,yBAAKxC,UAAU,eACXgD,MACI,CAAEC,UAAW,SACjB,kBAAC,EAAD,CAAWlD,SAAUG,KAAKsC,iBAC1B,yBAAKxC,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,sBACX,kBAAC,EAAD,CAAagC,MAAO9B,KAAKT,MAAM8C,iBAEnC,yBAAKvC,UAAU,oBACX,kBAAC,EAAD,CAAW6B,OAAQ3B,KAAKT,MAAMoC,OAAQV,cAAejB,KAAKiB,wB,GA/CpEX,IAAMC,WCFlByC,EAAQ,WACV,OACI,6BACI,kBAAC,EAAD,QAKZC,IAASC,OAAO,kBAAE,EAAF,MAAYC,SAASC,cAAc,Y","file":"static/js/main.257aa4e5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n//class based component\r\nclass SearchBar extends React.Component {\r\n\r\n    state = { content: '' };\r\n\r\n    onFormSubmit = (event) => {\r\n        event.preventDefault();\r\n        // console.log(this.state.content);\r\n        this.props.onSearch(this.state.content);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui segment\">\r\n                <form className=\"ui form\" onSubmit={this.onFormSubmit}>\r\n                    <div className=\"field\">\r\n                        <label>Video Search</label>\r\n                        <input type=\"text\" value={this.state.content} onChange={event => this.setState({ content: event.target.value })} />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SearchBar;","import axios from 'axios';\r\n//API_KEY\r\nconst KEY = \"AIzaSyBpMtDVEF7vhZ13edQa1Z9UFdnlIhBB5iU\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"https://www.googleapis.com/youtube/v3\",\r\n    params: {\r\n        part: 'snippet',\r\n        type: 'video',\r\n        maxResults: 5,\r\n        key: KEY\r\n    }\r\n});","import React from 'react';\r\n//CSS\r\nimport './VideoList.css';\r\n\r\nconst VideoItem = ({ videoprops, onVideoSelect }) => {\r\n    return (\r\n        <div onClick={() => onVideoSelect(videoprops)} className=\" video-item item\">\r\n            <img className=\"ui image\" src={videoprops.snippet.thumbnails.medium.url} alt={videoprops.snippet.title} />\r\n            <div className=\"content\">\r\n                {/* {props.videoprops.snippet.title} */}\r\n                <div className=\"header\">{videoprops.snippet.title}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem';\r\n\r\n\r\nconst VideoList = ({ videos, onVideoSelect }) => {\r\n\r\n    const renderedList = videos.map(video => {\r\n        return <VideoItem\r\n            videoprops={video}\r\n            onVideoSelect={onVideoSelect}\r\n            key={video.id.videoId}\r\n        />;\r\n    });\r\n\r\n    return (\r\n        <div className=\" ui relaxed divided list\" >\r\n            { /* We have {videos.length}  search results. */}\r\n            { renderedList}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoList;","import React from 'react';\r\n\r\nconst VideoDetail = ({ video }) => {\r\n\r\n    if (!video) {\r\n        return <div> Loading! </div>\r\n    }\r\n\r\n    const videoSrc = `https://www.youtube.com/embed/${video.id.videoId}`;\r\n\r\n    return (\r\n        <div >\r\n            <div className=\"ui embed\" >\r\n                <iframe src={videoSrc} />\r\n            </div>\r\n            <div className=\"ui segment\">\r\n                <h4 className=\"ui header\"> {video.snippet.title} </h4>\r\n                <p > {video.snippet.description} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default VideoDetail;","import React from 'react';\r\nimport SearchBar from './SearchBar';\r\nimport YouTube from '../api/YouTube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\n\r\nclass App extends React.Component {\r\n\r\n    // onSearchSubmit(content){\r\n    //     console.log(content);\r\n    // }\r\n\r\n    state = { videos: [], SelectedVideo: null };\r\n\r\n    // Providing default searchitem through componentDidMount method as soon as App get rendered \r\n    // \"cats\" will get display on the screen as a default item.\r\n\r\n    componentDidMount() {\r\n        this.onSearchSubmit('cats');\r\n    }\r\n\r\n\r\n    onSearchSubmit = async content => {\r\n\r\n        const response = await YouTube.get('/search', {\r\n            params: {\r\n                q: content\r\n            }\r\n        });\r\n        this.setState({\r\n            videos: response.data.items,\r\n            SelectedVideo: response.data.items[0]\r\n        });\r\n        // console.log(response);\r\n    };\r\n\r\n    onVideoSelect = (video) => {\r\n        // console.log(\"This is App :\",video);\r\n        this.setState({ SelectedVideo: video });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ui container\"\r\n                style={\r\n                    { marginTop: \"20px\" }} >\r\n                <SearchBar onSearch={this.onSearchSubmit} />\r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n                        <div className=\"eleven wide column\">\r\n                            <VideoDetail video={this.state.SelectedVideo} />\r\n                        </div>\r\n                        <div className=\"five wide column\">\r\n                            <VideoList videos={this.state.videos} onVideoSelect={this.onVideoSelect} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nconst Index = () => {\r\n    return (\r\n        <div >\r\n            <App />\r\n        </div>\r\n    );\r\n};\r\n\r\nReactDOM.render(< Index />, document.querySelector('#root'));"],"sourceRoot":""}